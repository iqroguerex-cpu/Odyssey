<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Summary - Odyssey</title>
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600;700&display=swap" rel="stylesheet">
    <style>
        /* All of your existing CSS remains unchanged here. */
        * { margin: 0; padding: 0; box-sizing: border-box; }
        :root { --bg-gradient-start: #0f172a; --bg-gradient-end: #1e293b; --card-bg: rgba(255, 255, 255, 0.05); --card-border: rgba(255, 255, 255, 0.1); --text-primary: #ffffff; --text-secondary: #94a3b8; --accent-primary: #667eea; --accent-secondary: #764ba2; --nav-bg: rgba(15, 23, 42, 0.8); --input-bg: rgba(255, 255, 255, 0.05); --hover-bg: rgba(102, 126, 234, 0.1); }
        body { font-family: 'Poppins', sans-serif; background: linear-gradient(135deg, var(--bg-gradient-start) 0%, var(--bg-gradient-end) 100%); min-height: 100vh; color: var(--text-primary); transition: all 0.5s ease; }
        body::before { content: ''; position: fixed; top: 0; left: 0; width: 100%; height: 100%; background: radial-gradient(circle at 20% 50%, rgba(102, 126, 234, 0.1) 0%, transparent 50%), radial-gradient(circle at 80% 80%, rgba(118, 75, 162, 0.1) 0%, transparent 50%); pointer-events: none; z-index: 0; }
        .content-wrapper { position: relative; max-width: 900px; margin: 0 auto; padding: 4rem 2rem; z-index: 1; }
        .summary-container { background: var(--card-bg); backdrop-filter: blur(20px); border: 1px solid var(--card-border); border-radius: 24px; padding: 3rem; box-shadow: 0 20px 60px rgba(0, 0, 0, 0.3); margin-top: 2rem; }
        .summary-header { display: flex; align-items: center; gap: 1rem; margin-bottom: 2rem; padding-bottom: 1rem; border-bottom: 2px solid var(--card-border); }
        .summary-header h2 { font-size: 2rem; background: linear-gradient(135deg, var(--accent-primary), var(--accent-secondary)); -webkit-background-clip: text; -webkit-text-fill-color: transparent; background-clip: text; }
        .summary-content { color: var(--text-primary); line-height: 1.8; font-size: 1.05rem; }
        .summary-content h1, .summary-content h2, .summary-content h3 { color: var(--text-primary); margin-top: 1.5rem; margin-bottom: 0.75rem; line-height: 1.3; }
        .summary-content p { margin-bottom: 1rem; }
        .summary-content ul, .summary-content ol { margin-left: 1.5rem; margin-bottom: 1rem; }
        .summary-content li { margin-bottom: 0.5rem; }
        .summary-content strong { background: linear-gradient(135deg, var(--accent-primary), var(--accent-secondary)); -webkit-background-clip: text; -webkit-text-fill-color: transparent; background-clip: text; }
        .action-buttons { display: flex; flex-wrap: wrap; gap: 1rem; margin-top: 2rem; }
        .btn { flex: 1; min-width: 150px; padding: 1rem 2rem; font-size: 1rem; font-weight: 600; text-decoration: none; border-radius: 10px; transition: all 0.3s ease; text-align: center; cursor: pointer; border: none; font-family: 'Poppins', sans-serif; }
        .btn:disabled { cursor: not-allowed; opacity: 0.7; }
        .btn-primary { color: white; background: linear-gradient(135deg, var(--accent-primary), var(--accent-secondary)); box-shadow: 0 4px 15px rgba(102, 126, 234, 0.4); }
        .btn-primary:hover:not(:disabled) { transform: translateY(-2px); box-shadow: 0 6px 20px rgba(102, 126, 234, 0.5); }
        .btn-secondary { color: var(--text-primary); background: var(--input-bg); border: 2px solid var(--card-border); }
        .btn-secondary:hover:not(:disabled) { background: var(--hover-bg); border-color: var(--accent-primary); }
        @media (max-width: 768px) { .action-buttons { flex-direction: column; } .summary-container { padding: 2rem 1.5rem; } }
    </style>
</head>
<body>
    <div class="content-wrapper">
        <% if (locals.summary) { %>
            <div class="summary-container">
                <div class="summary-header">
                    <h2>üìã Your Summary</h2>
                </div>
                <div class="summary-content">
                    <%- summary %>
                </div>
                <div class="action-buttons">
                    <button id="copy-btn" class="btn btn-primary">üìã Copy Summary</button>
                    <button id="download-pdf-btn" class="btn btn-secondary">üìÑ Download PDF</button>
                    <a href="/summarizer" class="btn btn-secondary">üîÑ Summarize Another</a>
                </div>
            </div>
        <% } %>
        <% if (locals.error) { %>
            <div class="error-message">‚ö†Ô∏è <%= error %></div>
        <% } %>
    </div>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/html-to-docx-file-saver@1.8.0/dist/html-to-docx.umd.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/FileSaver.js/2.0.0/FileSaver.min.js"></script>
    
    <script>
        const copyBtn = document.getElementById('copy-btn');
const pdfBtn = document.getElementById('download-pdf-btn');
const summaryContent = document.querySelector('.summary-content');

// --- Copy to Clipboard ---
copyBtn.addEventListener('click', () => {
    navigator.clipboard.writeText(summaryContent.innerText).then(() => {
        alert('Summary copied to clipboard!');
    }).catch(err => {
        console.error('Failed to copy text: ', err);
    });
});

// --- PDF Download ---
pdfBtn.addEventListener('click', () => {
    const originalText = pdfBtn.innerHTML;
    pdfBtn.innerHTML = 'üìÑ Downloading...';
    pdfBtn.disabled = true;

    const { jsPDF } = window.jspdf;
    const doc = new jsPDF({ orientation: 'p', unit: 'mm', format: 'a4' });
    
    // Get the text content
    const summaryText = summaryContent.innerText;
    
    // Define margins and page dimensions
    const margin = 15;
    const pageHeight = doc.internal.pageSize.getHeight();
    const usableWidth = doc.internal.pageSize.getWidth() - (margin * 2);
    
    // Split the text into lines that fit the page width
    const lines = doc.splitTextToSize(summaryText, usableWidth);
    
    let cursorY = margin; // Start the cursor at the top margin
    const lineHeight = 7; // Approximate height of a line in mm

    // Loop through each line
    lines.forEach(line => {
        // Check if adding the next line would go off the page
        if (cursorY + lineHeight > pageHeight - margin) {
            doc.addPage();       // Add a new page
            cursorY = margin;    // Reset the cursor to the top margin
        }
        
        doc.text(line, margin, cursorY); // Add the line of text
        cursorY += lineHeight;           // Move the cursor down for the next line
    });

    doc.save('summary.pdf');

    pdfBtn.innerHTML = originalText;
    pdfBtn.disabled = false;
});

    </script>
</body>
</html>

